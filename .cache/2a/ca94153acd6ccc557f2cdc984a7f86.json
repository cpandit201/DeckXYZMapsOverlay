{"id":"node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js.map","includedInParent":true,"mtime":1688318182663},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688315348114},{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/layers/package.json","includedInParent":true,"mtime":1688318182663}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = \"#define SHADER_NAME path-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float miterLimit;\\n\\nvarying vec4 vColor;\\nvarying vec2 vCornerOffset;\\nvarying float vMiterLength;\\nvarying vec2 vPathPosition;\\nvarying float vPathLength;\\nvarying float vJointType;\\n\\nvoid main(void) {\\n  geometry.uv = vPathPosition;\\n\\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\\n      discard;\\n    }\\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = vColor;\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":15}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":660}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":8}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":15}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":18}},{"source":"../../../src/path-layer/path-layer-fragment.glsl.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":26}}],"sources":{"../../../src/path-layer/path-layer-fragment.glsl.ts":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\n/*\n * vPathPosition represents the relative coordinates of the current fragment on the path segment.\n * vPathPosition.x - position along the width of the path, between [-1, 1]. 0 is the center line.\n * vPathPosition.y - position along the length of the path, between [0, L / width].\n */\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    // if joint is rounded, test distance from the corner\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    // trim miter\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n"},"lineCount":null}},"error":null,"hash":"f9c4557707ee4b8b7963a3d17c9da123","cacheData":{"env":{}}}