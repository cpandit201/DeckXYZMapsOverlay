{"id":"node_modules/@loaders.gl/core/dist/esm/lib/utils/mime-type-utils.js","dependencies":[{"name":"/project/home/cpandit201/workspace/node_modules/@loaders.gl/core/dist/esm/lib/utils/mime-type-utils.js.map","includedInParent":true,"mtime":1688284130527},{"name":"/project/home/cpandit201/workspace/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/home/cpandit201/workspace/node_modules/@loaders.gl/core/package.json","includedInParent":true,"mtime":1688284130527}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseMIMEType = parseMIMEType;\nexports.parseMIMETypeFromURL = parseMIMETypeFromURL;\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\nfunction parseMIMEType(mimeString) {\n  const matches = MIME_TYPE_PATTERN.exec(mimeString);\n  if (matches) {\n    return matches[1];\n  }\n  return mimeString;\n}\nfunction parseMIMETypeFromURL(url) {\n  const matches = DATA_URL_PATTERN.exec(url);\n  if (matches) {\n    return matches[1];\n  }\n  return '';\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"DATA_URL_PATTERN","original":{"line":4,"column":6},"generated":{"line":8,"column":6}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":4,"column":22},"generated":{"line":8,"column":22}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":4,"column":25},"generated":{"line":8,"column":25}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":4,"column":57},"generated":{"line":8,"column":57}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"MIME_TYPE_PATTERN","original":{"line":5,"column":6},"generated":{"line":9,"column":6}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":5,"column":23},"generated":{"line":9,"column":23}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":5,"column":26},"generated":{"line":9,"column":26}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":5,"column":48},"generated":{"line":9,"column":48}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":15,"column":7},"generated":{"line":10,"column":0}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"parseMIMEType","original":{"line":15,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"parseMIMEType","original":{"line":15,"column":29},"generated":{"line":10,"column":22}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"mimeString","original":{"line":15,"column":30},"generated":{"line":10,"column":23}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":15,"column":48},"generated":{"line":10,"column":33}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":15,"column":58},"generated":{"line":10,"column":35}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"matches","original":{"line":17,"column":8},"generated":{"line":11,"column":8}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":11,"column":15}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"MIME_TYPE_PATTERN","original":{"line":17,"column":18},"generated":{"line":11,"column":18}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":17,"column":35},"generated":{"line":11,"column":35}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"exec","original":{"line":17,"column":36},"generated":{"line":11,"column":36}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":11,"column":40}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"mimeString","original":{"line":17,"column":41},"generated":{"line":11,"column":41}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":17,"column":51},"generated":{"line":11,"column":51}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":17,"column":52},"generated":{"line":11,"column":52}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":12,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"matches","original":{"line":18,"column":6},"generated":{"line":12,"column":6}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":12,"column":13}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":12,"column":15}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":13,"column":4}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"matches","original":{"line":19,"column":11},"generated":{"line":13,"column":11}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":13,"column":18}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":13,"column":19}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":19,"column":20},"generated":{"line":13,"column":20}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":19,"column":21},"generated":{"line":13,"column":21}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":14,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"mimeString","original":{"line":21,"column":9},"generated":{"line":15,"column":9}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":15,"column":19}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":17,"column":0}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"parseMIMETypeFromURL","original":{"line":33,"column":16},"generated":{"line":17,"column":9}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"parseMIMETypeFromURL","original":{"line":33,"column":36},"generated":{"line":17,"column":29}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"url","original":{"line":33,"column":37},"generated":{"line":17,"column":30}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":33,"column":48},"generated":{"line":17,"column":33}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":17,"column":35}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"matches","original":{"line":35,"column":8},"generated":{"line":18,"column":8}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":35,"column":15},"generated":{"line":18,"column":15}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"DATA_URL_PATTERN","original":{"line":35,"column":18},"generated":{"line":18,"column":18}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":35,"column":34},"generated":{"line":18,"column":34}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"exec","original":{"line":35,"column":35},"generated":{"line":18,"column":35}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":35,"column":39},"generated":{"line":18,"column":39}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"url","original":{"line":35,"column":40},"generated":{"line":18,"column":40}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":35,"column":43},"generated":{"line":18,"column":43}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":35,"column":44},"generated":{"line":18,"column":44}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"matches","original":{"line":36,"column":6},"generated":{"line":19,"column":6}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":19,"column":13}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":19,"column":15}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":"matches","original":{"line":37,"column":11},"generated":{"line":20,"column":11}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":37,"column":18},"generated":{"line":20,"column":18}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":37,"column":19},"generated":{"line":20,"column":19}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":37,"column":20},"generated":{"line":20,"column":20}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":37,"column":21},"generated":{"line":20,"column":21}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":22,"column":2}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":22,"column":9}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":39,"column":11},"generated":{"line":22,"column":11}},{"source":"../../../../src/lib/utils/mime-type-utils.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../../../../src/lib/utils/mime-type-utils.ts":"// TODO - build/integrate proper MIME type parsing\n// https://mimesniff.spec.whatwg.org/\n\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\n\n/**\n * Remove extra data like `charset` from MIME types\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMEType(mimeString: string): string {\n  // If resource is a data url, extract any embedded mime type\n  const matches = MIME_TYPE_PATTERN.exec(mimeString);\n  if (matches) {\n    return matches[1];\n  }\n  return mimeString;\n}\n\n/**\n * Extract MIME type from data URL\n *\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMETypeFromURL(url: string): string {\n  // If resource is a data URL, extract any embedded mime type\n  const matches = DATA_URL_PATTERN.exec(url);\n  if (matches) {\n    return matches[1];\n  }\n  return '';\n}\n"},"lineCount":null}},"error":null,"hash":"0e8c6142c6f65de6f31946f24f52127d","cacheData":{"env":{}}}