{"id":"qxVk","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js.map","includedInParent":true,"mtime":1688284130514},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/package.json","includedInParent":true,"mtime":1688284130514},{"name":"../project/project","loc":{"line":1,"column":20,"index":20},"parent":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js","resolved":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var o=t(require(\"../project/project\"));function t(o){return o&&o.__esModule?o:{default:o}}const e=\"\\nvec4 project_position_to_clipspace(\\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\\n) {\\n  vec3 projectedPosition = project_position(position, position64Low);\\n  mat3 rotation;\\n  if (project_needs_rotation(projectedPosition, rotation)) {\\n    // offset is specified as ENU\\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\\n    offset = rotation * offset;\\n  }\\n  commonPosition = vec4(projectedPosition + offset, 1.0);\\n  return project_common_position_to_clipspace(commonPosition);\\n}\\n\\nvec4 project_position_to_clipspace(\\n  vec3 position, vec3 position64Low, vec3 offset\\n) {\\n  vec4 commonPosition;\\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\\n}\\n\";var n={name:\"project32\",dependencies:[o.default],vs:e};exports.default=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":107}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":139}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":141}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":151}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":154}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":156}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":167}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":169}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":170}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":178}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":181}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"vs","original":{"line":24,"column":6},"generated":{"line":1,"column":187}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":1,"column":189}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":976}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":980}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":1,"column":982}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"name","original":{"line":48,"column":2},"generated":{"line":1,"column":983}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":1,"column":988}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"dependencies","original":{"line":49,"column":2},"generated":{"line":1,"column":1000}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":1,"column":1013}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"project","original":{"line":49,"column":17},"generated":{"line":1,"column":1014}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":1,"column":1016}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"vs","original":{"line":50,"column":2},"generated":{"line":1,"column":1025}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"vs","original":{"line":50,"column":2},"generated":{"line":1,"column":1028}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":1031}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":1039}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":1,"column":1047}}],"sources":{"../../../../src/shaderlib/project32/project32.ts":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport project from '../project/project';\nimport type {ShaderModule} from '../../types/types';\n\nconst vs = `\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n`;\n\nexport default {\n  name: 'project32',\n  dependencies: [project],\n  vs\n} as ShaderModule;\n"},"lineCount":null}},"error":null,"hash":"22fdc22dca2510f82fd031886609b8af","cacheData":{"env":{}}}