{"id":"OhKi","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/webgl/dist/esm/utils/utils.js.map","includedInParent":true,"mtime":1688284130571},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/webgl/package.json","includedInParent":true,"mtime":1688284130571},{"name":"./assert","loc":{"line":1,"column":23,"index":23},"parent":"/project/deck-gl-examples-01/node_modules/@luma.gl/webgl/dist/esm/utils/utils.js","resolved":"/project/deck-gl-examples-01/node_modules/@luma.gl/webgl/dist/esm/utils/assert.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isObjectEmpty=o,exports.isPowerOfTwo=n,exports.uid=r;var e=require(\"./assert\");const t={};function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"id\";t[e]=t[e]||1;const r=t[e]++;return\"\".concat(e,\"-\").concat(r)}function n(t){return(0,e.assert)(\"number\"==typeof t,\"Input must be a number\"),t&&0==(t&t-1)}function o(e){let t=!0;for(const r in e){t=!1;break}return t}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":90}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":92}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":100}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":113}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":115}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":123}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":36,"column":1},"generated":{"line":1,"column":127}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":133}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":135}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":143}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":155}},{"source":"../../../src/utils/utils.js","name":"uidCounters","original":{"line":3,"column":6},"generated":{"line":1,"column":161}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":3,"column":20},"generated":{"line":1,"column":163}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":7},"generated":{"line":1,"column":166}},{"source":"../../../src/utils/utils.js","name":"uid","original":{"line":10,"column":16},"generated":{"line":1,"column":175}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":179}},{"source":"../../../src/utils/utils.js","name":"id","original":{"line":10,"column":20},"generated":{"line":1,"column":183}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":185}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":195}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":202}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":210}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":214}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":224}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":227}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":31},"generated":{"line":1,"column":237}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":10,"column":25},"generated":{"line":1,"column":240}},{"source":"../../../src/utils/utils.js","name":"uidCounters","original":{"line":11,"column":2},"generated":{"line":1,"column":245}},{"source":"../../../src/utils/utils.js","name":"id","original":{"line":11,"column":14},"generated":{"line":1,"column":247}},{"source":"../../../src/utils/utils.js","name":"uidCounters","original":{"line":11,"column":20},"generated":{"line":1,"column":250}},{"source":"../../../src/utils/utils.js","name":"id","original":{"line":11,"column":32},"generated":{"line":1,"column":252}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":11,"column":39},"generated":{"line":1,"column":256}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":12,"column":2},"generated":{"line":1,"column":258}},{"source":"../../../src/utils/utils.js","name":"count","original":{"line":12,"column":8},"generated":{"line":1,"column":264}},{"source":"../../../src/utils/utils.js","name":"uidCounters","original":{"line":12,"column":16},"generated":{"line":1,"column":266}},{"source":"../../../src/utils/utils.js","name":"id","original":{"line":12,"column":28},"generated":{"line":1,"column":268}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":273}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":279}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":282}},{"source":"../../../src/utils/utils.js","name":"id","original":{"line":13,"column":12},"generated":{"line":1,"column":289}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":291}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":13,"column":2},"generated":{"line":1,"column":296}},{"source":"../../../src/utils/utils.js","name":"count","original":{"line":13,"column":18},"generated":{"line":1,"column":303}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":21,"column":7},"generated":{"line":1,"column":306}},{"source":"../../../src/utils/utils.js","name":"isPowerOfTwo","original":{"line":21,"column":16},"generated":{"line":1,"column":315}},{"source":"../../../src/utils/utils.js","name":"n","original":{"line":21,"column":29},"generated":{"line":1,"column":317}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":320}},{"source":"../../../src/utils/utils.js","name":"assert","original":{"line":22,"column":2},"generated":{"line":1,"column":327}},{"source":"../../../src/utils/utils.js","name":"assert","original":{"line":22,"column":2},"generated":{"line":1,"column":329}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":22,"column":8},"generated":{"line":1,"column":331}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":22,"column":22},"generated":{"line":1,"column":339}},{"source":"../../../src/utils/utils.js","name":"n","original":{"line":22,"column":16},"generated":{"line":1,"column":356}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":22,"column":32},"generated":{"line":1,"column":358}},{"source":"../../../src/utils/utils.js","name":"n","original":{"line":23,"column":9},"generated":{"line":1,"column":384}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":23,"column":32},"generated":{"line":1,"column":387}},{"source":"../../../src/utils/utils.js","name":"n","original":{"line":23,"column":15},"generated":{"line":1,"column":391}},{"source":"../../../src/utils/utils.js","name":"n","original":{"line":23,"column":20},"generated":{"line":1,"column":393}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":23,"column":24},"generated":{"line":1,"column":395}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":27,"column":7},"generated":{"line":1,"column":398}},{"source":"../../../src/utils/utils.js","name":"isObjectEmpty","original":{"line":27,"column":16},"generated":{"line":1,"column":407}},{"source":"../../../src/utils/utils.js","name":"obj","original":{"line":27,"column":30},"generated":{"line":1,"column":409}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":28,"column":2},"generated":{"line":1,"column":412}},{"source":"../../../src/utils/utils.js","name":"isEmpty","original":{"line":28,"column":6},"generated":{"line":1,"column":416}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":28,"column":16},"generated":{"line":1,"column":419}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":30,"column":2},"generated":{"line":1,"column":421}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":30,"column":7},"generated":{"line":1,"column":425}},{"source":"../../../src/utils/utils.js","name":"key","original":{"line":30,"column":13},"generated":{"line":1,"column":431}},{"source":"../../../src/utils/utils.js","name":"obj","original":{"line":30,"column":20},"generated":{"line":1,"column":436}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":30,"column":25},"generated":{"line":1,"column":438}},{"source":"../../../src/utils/utils.js","name":"isEmpty","original":{"line":31,"column":4},"generated":{"line":1,"column":439}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":31,"column":14},"generated":{"line":1,"column":442}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":444}},{"source":"../../../src/utils/utils.js","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":450}},{"source":"../../../src/utils/utils.js","name":"isEmpty","original":{"line":35,"column":9},"generated":{"line":1,"column":457}}],"sources":{"../../../src/utils/utils.js":"import {assert} from './assert';\n\nconst uidCounters = {};\n\n/**\n * Returns a UID.\n * @param {string} id= - Identifier base name\n * @return {string} uid\n **/\nexport function uid(id = 'id') {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n\n/**\n * Verifies if a given number is power of two or not.\n * @param {object} n - The number to check.\n * @return {boolean} Returns true if the given number is power of 2, false otherwise.\n **/\nexport function isPowerOfTwo(n) {\n  assert(typeof n === 'number', 'Input must be a number');\n  return n && (n & (n - 1)) === 0;\n}\n\n// Returns true if given object is empty, false otherwise.\nexport function isObjectEmpty(obj) {\n  let isEmpty = true;\n  /* eslint-disable no-unused-vars  */\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n  /* eslint-enable no-unused-vars  */\n  return isEmpty;\n}\n"},"lineCount":null}},"error":null,"hash":"5e4bedf43a4362e23732e3dfbc9b6ccf","cacheData":{"env":{}}}