{"id":"T0TF","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/iterators/async-iteration.js.map","includedInParent":true,"mtime":1688284132110},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/package.json","includedInParent":true,"mtime":1688284132110},{"name":"../binary-utils/array-buffer-utils","loc":{"line":1,"column":40,"index":40},"parent":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/iterators/async-iteration.js","resolved":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils/array-buffer-utils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.concatenateArrayBuffersAsync=n,exports.concatenateStringsAsync=e,exports.forEach=t;var r=require(\"../binary-utils/array-buffer-utils\");async function t(r,t){for(;;){const{done:n,value:e}=await r.next();if(n)return void r.return();if(t(e))return}}async function n(t){const n=[];for await(const r of t)n.push(r);return(0,r.concatenateArrayBuffers)(...n)}async function e(r){const t=[];for await(const n of r)t.push(n);return t.join(\"\")}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":105}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":107}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":115}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":139}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":141}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":149}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":157}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":159}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":163}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":165}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":173}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":1,"column":211}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"forEach","original":{"line":17,"column":22},"generated":{"line":1,"column":226}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"iterator","original":{"line":17,"column":30},"generated":{"line":1,"column":228}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"visitor","original":{"line":17,"column":40},"generated":{"line":1,"column":230}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":233}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":1,"column":240}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":1,"column":241}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":20,"column":10},"generated":{"line":1,"column":247}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"done","original":{"line":20,"column":11},"generated":{"line":1,"column":252}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":1,"column":254}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"value","original":{"line":20,"column":17},"generated":{"line":1,"column":260}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"iterator","original":{"line":20,"column":32},"generated":{"line":1,"column":269}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"next","original":{"line":20,"column":41},"generated":{"line":1,"column":271}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":1,"column":278}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"done","original":{"line":21,"column":8},"generated":{"line":1,"column":281}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":1,"column":283}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"iterator","original":{"line":22,"column":6},"generated":{"line":1,"column":295}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"return","original":{"line":22,"column":15},"generated":{"line":1,"column":297}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":1,"column":306}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"visitor","original":{"line":25,"column":19},"generated":{"line":1,"column":309}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"value","original":{"line":25,"column":27},"generated":{"line":1,"column":311}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":314}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":1,"column":322}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"concatenateArrayBuffersAsync","original":{"line":39,"column":22},"generated":{"line":1,"column":337}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"asyncIterator","original":{"line":40,"column":2},"generated":{"line":1,"column":339}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":1,"column":342}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"arrayBuffers","original":{"line":42,"column":8},"generated":{"line":1,"column":348}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":42,"column":38},"generated":{"line":1,"column":350}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":353}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":1,"column":363}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"chunk","original":{"line":43,"column":19},"generated":{"line":1,"column":369}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"asyncIterator","original":{"line":43,"column":28},"generated":{"line":1,"column":374}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"arrayBuffers","original":{"line":44,"column":4},"generated":{"line":1,"column":376}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"push","original":{"line":44,"column":17},"generated":{"line":1,"column":378}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"chunk","original":{"line":44,"column":22},"generated":{"line":1,"column":383}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":1,"column":386}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"concatenateArrayBuffers","original":{"line":46,"column":9},"generated":{"line":1,"column":393}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"concatenateArrayBuffers","original":{"line":46,"column":9},"generated":{"line":1,"column":395}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":46,"column":32},"generated":{"line":1,"column":397}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"arrayBuffers","original":{"line":46,"column":36},"generated":{"line":1,"column":425}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":49,"column":7},"generated":{"line":1,"column":428}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"concatenateStringsAsync","original":{"line":49,"column":22},"generated":{"line":1,"column":443}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"asyncIterator","original":{"line":50,"column":2},"generated":{"line":1,"column":445}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":1,"column":448}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"strings","original":{"line":52,"column":8},"generated":{"line":1,"column":454}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":52,"column":28},"generated":{"line":1,"column":456}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":1,"column":459}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":53,"column":13},"generated":{"line":1,"column":469}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"chunk","original":{"line":53,"column":19},"generated":{"line":1,"column":475}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"asyncIterator","original":{"line":53,"column":28},"generated":{"line":1,"column":480}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"strings","original":{"line":54,"column":4},"generated":{"line":1,"column":482}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"push","original":{"line":54,"column":12},"generated":{"line":1,"column":484}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"chunk","original":{"line":54,"column":17},"generated":{"line":1,"column":489}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":1,"column":492}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"strings","original":{"line":56,"column":9},"generated":{"line":1,"column":499}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":"join","original":{"line":56,"column":17},"generated":{"line":1,"column":501}},{"source":"../../../../src/lib/iterators/async-iteration.ts","name":null,"original":{"line":56,"column":22},"generated":{"line":1,"column":506}}],"sources":{"../../../../src/lib/iterators/async-iteration.ts":"import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n"},"lineCount":null}},"error":null,"hash":"7caaf4c35e93e788990f11c1e0597028","cacheData":{"env":{}}}