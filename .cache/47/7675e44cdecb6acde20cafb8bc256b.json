{"id":"izXl","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/dist/esm/modules/image-fun-filters/hexagonalpixelate.js.map","includedInParent":true,"mtime":1688284132458},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/package.json","includedInParent":true,"mtime":1688284132458}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.hexagonalPixelate=void 0;const e=\"uniform vec2 center;\\nuniform float scale;\\n\\nvec4 hexagonalPixelate_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\\n  vec2 tex = (texCoord * texSize - center * texSize) / scale;\\n  tex.y /= 0.866025404;\\n  tex.x -= tex.y * 0.5;\\n\\n  vec2 a;\\n  if (tex.x + tex.y - floor(tex.x) - floor(tex.y) < 1.0) {\\n    a = vec2(floor(tex.x), floor(tex.y));\\n  }\\n  else a = vec2(ceil(tex.x), ceil(tex.y));\\n  vec2 b = vec2(ceil(tex.x), floor(tex.y));\\n  vec2 c = vec2(floor(tex.x), ceil(tex.y));\\n\\n  vec3 TEX = vec3(tex.x, tex.y, 1.0 - tex.x - tex.y);\\n  vec3 A = vec3(a.x, a.y, 1.0 - a.x - a.y);\\n  vec3 B = vec3(b.x, b.y, 1.0 - b.x - b.y);\\n  vec3 C = vec3(c.x, c.y, 1.0 - c.x - c.y);\\n\\n  float alen = length(TEX - A);\\n  float blen = length(TEX - B);\\n  float clen = length(TEX - C);\\n\\n  vec2 choice;\\n  if (alen < blen) {\\n    if (alen < clen) choice = a;\\n    else choice = c;\\n  } else {\\n    if (blen < clen) choice = b;\\n    else choice = c;\\n  }\\n\\n  choice.x += choice.y * 0.5;\\n  choice.y *= 0.866025404;\\n  choice *= scale / texSize;\\n\\n  return texture2D(texture, choice + center);\\n}\\n\",n={center:{value:[.5,.5],hint:\"screenspace\"},scale:{value:10,min:1,softMin:5,softMax:50}},c={name:\"hexagonalPixelate\",uniforms:n,fs:e,passes:[{sampler:!0}]};exports.hexagonalPixelate=c;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":99}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":101}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"fs","original":{"line":3,"column":6},"generated":{"line":1,"column":107}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":3,"column":8},"generated":{"line":1,"column":109}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"uniforms","original":{"line":46,"column":6},"generated":{"line":1,"column":1217}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":46,"column":17},"generated":{"line":1,"column":1219}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"center","original":{"line":47,"column":2},"generated":{"line":1,"column":1220}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":47,"column":10},"generated":{"line":1,"column":1227}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"value","original":{"line":47,"column":11},"generated":{"line":1,"column":1228}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":47,"column":18},"generated":{"line":1,"column":1234}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":47,"column":19},"generated":{"line":1,"column":1235}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":47,"column":24},"generated":{"line":1,"column":1238}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"hint","original":{"line":47,"column":30},"generated":{"line":1,"column":1242}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":47,"column":36},"generated":{"line":1,"column":1247}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"scale","original":{"line":48,"column":2},"generated":{"line":1,"column":1262}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":1268}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"value","original":{"line":48,"column":10},"generated":{"line":1,"column":1269}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":48,"column":17},"generated":{"line":1,"column":1275}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"min","original":{"line":48,"column":21},"generated":{"line":1,"column":1278}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":48,"column":26},"generated":{"line":1,"column":1282}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"softMin","original":{"line":48,"column":29},"generated":{"line":1,"column":1284}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":48,"column":38},"generated":{"line":1,"column":1292}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"softMax","original":{"line":48,"column":41},"generated":{"line":1,"column":1294}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":48,"column":50},"generated":{"line":1,"column":1302}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"hexagonalPixelate","original":{"line":52,"column":13},"generated":{"line":1,"column":1307}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":33},"generated":{"line":1,"column":1309}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"name","original":{"line":53,"column":2},"generated":{"line":1,"column":1310}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":1315}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"uniforms","original":{"line":54,"column":2},"generated":{"line":1,"column":1335}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"uniforms","original":{"line":54,"column":2},"generated":{"line":1,"column":1344}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"fs","original":{"line":55,"column":2},"generated":{"line":1,"column":1346}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"fs","original":{"line":55,"column":2},"generated":{"line":1,"column":1349}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"passes","original":{"line":56,"column":2},"generated":{"line":1,"column":1351}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":56,"column":10},"generated":{"line":1,"column":1358}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":56,"column":11},"generated":{"line":1,"column":1359}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":"sampler","original":{"line":56,"column":12},"generated":{"line":1,"column":1360}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":56,"column":21},"generated":{"line":1,"column":1369}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":1374}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":1382}},{"source":"../../../../src/modules/image-fun-filters/hexagonalpixelate.js","name":null,"original":{"line":52,"column":7},"generated":{"line":1,"column":1400}}],"sources":{"../../../../src/modules/image-fun-filters/hexagonalpixelate.js":"/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nconst fs = `\\\nuniform vec2 center;\nuniform float scale;\n\nvec4 hexagonalPixelate_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 tex = (texCoord * texSize - center * texSize) / scale;\n  tex.y /= 0.866025404;\n  tex.x -= tex.y * 0.5;\n\n  vec2 a;\n  if (tex.x + tex.y - floor(tex.x) - floor(tex.y) < 1.0) {\n    a = vec2(floor(tex.x), floor(tex.y));\n  }\n  else a = vec2(ceil(tex.x), ceil(tex.y));\n  vec2 b = vec2(ceil(tex.x), floor(tex.y));\n  vec2 c = vec2(floor(tex.x), ceil(tex.y));\n\n  vec3 TEX = vec3(tex.x, tex.y, 1.0 - tex.x - tex.y);\n  vec3 A = vec3(a.x, a.y, 1.0 - a.x - a.y);\n  vec3 B = vec3(b.x, b.y, 1.0 - b.x - b.y);\n  vec3 C = vec3(c.x, c.y, 1.0 - c.x - c.y);\n\n  float alen = length(TEX - A);\n  float blen = length(TEX - B);\n  float clen = length(TEX - C);\n\n  vec2 choice;\n  if (alen < blen) {\n    if (alen < clen) choice = a;\n    else choice = c;\n  } else {\n    if (blen < clen) choice = b;\n    else choice = c;\n  }\n\n  choice.x += choice.y * 0.5;\n  choice.y *= 0.866025404;\n  choice *= scale / texSize;\n\n  return texture2D(texture, choice + center);\n}\n`;\n\nconst uniforms = {\n  center: {value: [0.5, 0.5], hint: 'screenspace'},\n  scale: {value: 10, min: 1, softMin: 5, softMax: 50}\n};\n\n/** @type {ShaderPass} */\nexport const hexagonalPixelate = {\n  name: 'hexagonalPixelate',\n  uniforms,\n  fs,\n  passes: [{sampler: true}]\n};\n"},"lineCount":null}},"error":null,"hash":"5d1b6b549a2a3a62d38d5b131fccd087","cacheData":{"env":{}}}