{"id":"node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js","dependencies":[{"name":"/project/home/cpandit201/workspace/node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js.map","includedInParent":true,"mtime":1688284132458},{"name":"/project/home/cpandit201/workspace/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/home/cpandit201/workspace/node_modules/@luma.gl/shadertools/package.json","includedInParent":true,"mtime":1688284132458}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = \"#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\\n\\nstruct AmbientLight {\\n vec3 color;\\n};\\n\\nstruct PointLight {\\n vec3 color;\\n vec3 position;\\n vec3 attenuation;\\n};\\n\\nstruct DirectionalLight {\\n  vec3 color;\\n  vec3 direction;\\n};\\n\\nuniform AmbientLight lighting_uAmbientLight;\\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\\nuniform int lighting_uPointLightCount;\\nuniform int lighting_uDirectionalLightCount;\\n\\nuniform bool lighting_uEnabled;\\n\\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\\n  return pointLight.attenuation.x\\n       + pointLight.attenuation.y * distance\\n       + pointLight.attenuation.z * distance * distance;\\n}\\n\\n#endif\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":15}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":849}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":7}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":8}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":15}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":18}},{"source":"../../../../src/modules/lights/lights.glsl.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":26}}],"sources":{"../../../../src/modules/lights/lights.glsl.js":"export default `\\\n#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n\n // Constant-Linear-Exponential\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n`;\n"},"lineCount":null}},"error":null,"hash":"48a69082ea477e978e4c22f6c67885b6","cacheData":{"env":{}}}