{"id":"g1DB","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/worker-utils/dist/esm/lib/env-utils/assert.js.map","includedInParent":true,"mtime":1688284132508},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/worker-utils/package.json","includedInParent":true,"mtime":1688284132508}],"generated":{"js":"\"use strict\";function e(e,r){if(!e)throw new Error(r||\"loaders.gl assertion failed.\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.assert=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"assert","original":{"line":6,"column":16},"generated":{"line":1,"column":22}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"condition","original":{"line":6,"column":23},"generated":{"line":1,"column":24}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"message","original":{"line":6,"column":39},"generated":{"line":1,"column":26}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":1,"column":29}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"condition","original":{"line":7,"column":7},"generated":{"line":1,"column":33}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":1,"column":35}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":1,"column":41}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"Error","original":{"line":8,"column":14},"generated":{"line":1,"column":45}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"message","original":{"line":8,"column":20},"generated":{"line":1,"column":51}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":8,"column":31},"generated":{"line":1,"column":54}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":137}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":141}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":149}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":156}}],"sources":{"../../../../src/lib/env-utils/assert.ts":"// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"7d7b40613c295b60883a0a956296ec92","cacheData":{"env":{}}}