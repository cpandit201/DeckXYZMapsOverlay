{"id":"node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js.map","includedInParent":true,"mtime":1688275021517},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688279811807},{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/package.json","includedInParent":true,"mtime":1688275021517},{"name":"../project/project","loc":{"line":1,"column":20,"index":20},"parent":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js","resolved":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _project = _interopRequireDefault(require(\"../project/project\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst vs = \"\\nvec4 project_position_to_clipspace(\\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\\n) {\\n  vec3 projectedPosition = project_position(position, position64Low);\\n  mat3 rotation;\\n  if (project_needs_rotation(projectedPosition, rotation)) {\\n    // offset is specified as ENU\\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\\n    offset = rotation * offset;\\n  }\\n  commonPosition = vec4(projectedPosition + offset, 1.0);\\n  return project_common_position_to_clipspace(commonPosition);\\n}\\n\\nvec4 project_position_to_clipspace(\\n  vec3 position, vec3 position64Low, vec3 offset\\n) {\\n  vec4 commonPosition;\\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\\n}\\n\";\nvar _default = {\n  name: 'project32',\n  dependencies: [_project.default],\n  vs\n};\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":12}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":15}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":37}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":38}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":45}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":9}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":32}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":35}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":46}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":49}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":53}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":56}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":57}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":67}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":70}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":73}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":78}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":85}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":87}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":90}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"vs","original":{"line":24,"column":6},"generated":{"line":9,"column":6}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":9,"column":8}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":9,"column":11}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":9,"column":797}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":4}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":12}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":10,"column":15}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"name","original":{"line":48,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":11,"column":6}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":11,"column":8}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":11,"column":19}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"dependencies","original":{"line":49,"column":2},"generated":{"line":12,"column":2}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":49,"column":14},"generated":{"line":12,"column":14}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":12,"column":16}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"project","original":{"line":49,"column":17},"generated":{"line":12,"column":17}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":12,"column":33}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":12,"column":34}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":"vs","original":{"line":50,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":14,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":14,"column":1}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":7}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":8}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":15}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":18}},{"source":"../../../../src/shaderlib/project32/project32.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":15,"column":26}}],"sources":{"../../../../src/shaderlib/project32/project32.ts":"// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport project from '../project/project';\nimport type {ShaderModule} from '../../types/types';\n\nconst vs = `\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n`;\n\nexport default {\n  name: 'project32',\n  dependencies: [project],\n  vs\n} as ShaderModule;\n"},"lineCount":null}},"error":null,"hash":"0bc1f89abbcaf5f793f32762cf84ed3d","cacheData":{"env":{}}}