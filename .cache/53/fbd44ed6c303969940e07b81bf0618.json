{"id":"node_modules/@luma.gl/shadertools/dist/esm/modules/image-adjust-filters/vibrance.js","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/dist/esm/modules/image-adjust-filters/vibrance.js.map","includedInParent":true,"mtime":1688318181642},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688315348114},{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/package.json","includedInParent":true,"mtime":1688318181642}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vibrance = void 0;\nconst fs = \"uniform float amount;\\n\\nvec4 vibrance_filterColor(vec4 color) {\\n  float average = (color.r + color.g + color.b) / 3.0;\\n  float mx = max(color.r, max(color.g, color.b));\\n  float amt = (mx - average) * (-amount * 3.0);\\n  color.rgb = mix(color.rgb, vec3(mx), amt);\\n  return color;\\n}\\n\\nvec4 vibrance_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\\n  return vibrance_filterColor(color);\\n}\\n\";\nconst uniforms = {\n  amount: {\n    value: 0,\n    min: -1,\n    max: 1\n  }\n};\nconst vibrance = {\n  name: 'vibrance',\n  uniforms,\n  fs,\n  passes: [{\n    filter: true\n  }]\n};\nexports.vibrance = vibrance;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"fs","original":{"line":3,"column":6},"generated":{"line":7,"column":6}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":3,"column":8},"generated":{"line":7,"column":8}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":3,"column":8},"generated":{"line":7,"column":11}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":415}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":19,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"uniforms","original":{"line":19,"column":6},"generated":{"line":8,"column":6}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":19,"column":14},"generated":{"line":8,"column":14}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":19,"column":17},"generated":{"line":8,"column":17}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"amount","original":{"line":20,"column":2},"generated":{"line":9,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":8},"generated":{"line":9,"column":8}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":10},"generated":{"line":9,"column":10}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"value","original":{"line":20,"column":11},"generated":{"line":10,"column":4}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":18},"generated":{"line":10,"column":11}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":10},"generated":{"line":10,"column":12}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"min","original":{"line":20,"column":21},"generated":{"line":11,"column":4}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":24},"generated":{"line":11,"column":7}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":26},"generated":{"line":11,"column":9}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":27},"generated":{"line":11,"column":10}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":10},"generated":{"line":11,"column":11}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"max","original":{"line":20,"column":30},"generated":{"line":12,"column":4}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":33},"generated":{"line":12,"column":7}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":35},"generated":{"line":12,"column":9}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":20,"column":10},"generated":{"line":13,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":19,"column":17},"generated":{"line":14,"column":0}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":19,"column":0},"generated":{"line":14,"column":1}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":15,"column":0}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"vibrance","original":{"line":24,"column":13},"generated":{"line":15,"column":6}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":21},"generated":{"line":15,"column":14}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":24},"generated":{"line":15,"column":17}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"name","original":{"line":25,"column":2},"generated":{"line":16,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":25,"column":6},"generated":{"line":16,"column":6}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":25,"column":8},"generated":{"line":16,"column":8}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":24},"generated":{"line":16,"column":18}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"uniforms","original":{"line":26,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":24},"generated":{"line":17,"column":10}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"fs","original":{"line":27,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":24},"generated":{"line":18,"column":4}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"passes","original":{"line":28,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":8},"generated":{"line":19,"column":8}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":10},"generated":{"line":19,"column":10}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":11},"generated":{"line":19,"column":11}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":"filter","original":{"line":28,"column":12},"generated":{"line":20,"column":4}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":18},"generated":{"line":20,"column":10}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":20},"generated":{"line":20,"column":12}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":11},"generated":{"line":21,"column":2}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":28,"column":10},"generated":{"line":21,"column":3}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":24},"generated":{"line":22,"column":0}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":22,"column":1}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":23,"column":0}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":23,"column":7}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":23,"column":8}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":23,"column":16}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":23,"column":19}},{"source":"../../../../src/modules/image-adjust-filters/vibrance.js","name":null,"original":{"line":24,"column":7},"generated":{"line":23,"column":27}}],"sources":{"../../../../src/modules/image-adjust-filters/vibrance.js":"/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nconst fs = `\\\nuniform float amount;\n\nvec4 vibrance_filterColor(vec4 color) {\n  float average = (color.r + color.g + color.b) / 3.0;\n  float mx = max(color.r, max(color.g, color.b));\n  float amt = (mx - average) * (-amount * 3.0);\n  color.rgb = mix(color.rgb, vec3(mx), amt);\n  return color;\n}\n\nvec4 vibrance_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  return vibrance_filterColor(color);\n}\n`;\n\nconst uniforms = {\n  amount: {value: 0, min: -1, max: 1}\n};\n\n/** @type {ShaderPass} */\nexport const vibrance = {\n  name: 'vibrance',\n  uniforms,\n  fs,\n  passes: [{filter: true}]\n};\n"},"lineCount":null}},"error":null,"hash":"68d3653b46132048bda30d17dda3e129","cacheData":{"env":{}}}