{"id":"node_modules/@loaders.gl/loader-utils/dist/esm/lib/env-utils/assert.js","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/env-utils/assert.js.map","includedInParent":true,"mtime":1688275023383},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688279811807},{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/package.json","includedInParent":true,"mtime":1688275023383}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = assert;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":7,"column":0}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"assert","original":{"line":5,"column":16},"generated":{"line":7,"column":9}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"assert","original":{"line":5,"column":22},"generated":{"line":7,"column":15}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"condition","original":{"line":5,"column":23},"generated":{"line":7,"column":16}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":5,"column":37},"generated":{"line":7,"column":25}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"message","original":{"line":5,"column":39},"generated":{"line":7,"column":27}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":5,"column":55},"generated":{"line":7,"column":34}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":5,"column":63},"generated":{"line":7,"column":36}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":8,"column":2}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":8,"column":6}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"condition","original":{"line":6,"column":7},"generated":{"line":8,"column":7}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":6,"column":16},"generated":{"line":8,"column":16}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":8,"column":18}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":9,"column":4}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":10},"generated":{"line":9,"column":10}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"Error","original":{"line":7,"column":14},"generated":{"line":9,"column":14}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":19},"generated":{"line":9,"column":19}},{"source":"../../../../src/lib/env-utils/assert.ts","name":"message","original":{"line":7,"column":20},"generated":{"line":9,"column":20}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":9,"column":27}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":9,"column":31}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":57},"generated":{"line":9,"column":57}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":7,"column":58},"generated":{"line":9,"column":58}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":10,"column":2}},{"source":"../../../../src/lib/env-utils/assert.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":11,"column":0}}],"sources":{"../../../../src/lib/env-utils/assert.ts":"/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"0f7d6168cefc0e9eeeac352d93d32e31","cacheData":{"env":{}}}