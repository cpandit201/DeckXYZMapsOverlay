{"id":"Bs13","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/worker-loader-utils/encode-with-worker.js.map","includedInParent":true,"mtime":1688284132110},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/package.json","includedInParent":true,"mtime":1688284132110},{"name":"@loaders.gl/worker-utils","loc":{"line":1,"column":27,"index":27},"parent":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/worker-loader-utils/encode-with-worker.js","resolved":"/project/deck-gl-examples-01/node_modules/@loaders.gl/worker-utils/dist/esm/index.js"},{"name":"../env-utils/globals","loc":{"line":2,"column":26,"index":81},"parent":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/worker-loader-utils/encode-with-worker.js","resolved":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/env-utils/globals.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.canEncodeWithWorker=o;var r=require(\"@loaders.gl/worker-utils\"),e=require(\"../env-utils/globals\");function o(o,s){return!!r.WorkerFarm.isSupported()&&(!!(e.isBrowser||null!=s&&s._nodeWorkers)&&(o.worker&&(null==s?void 0:s.worker)))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":112}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":140}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":142}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":150}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":1,"column":174}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"canEncodeWithWorker","original":{"line":10,"column":16},"generated":{"line":1,"column":183}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"writer","original":{"line":10,"column":36},"generated":{"line":1,"column":185}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":10,"column":52},"generated":{"line":1,"column":187}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":1,"column":190}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"WorkerFarm","original":{"line":11,"column":7},"generated":{"line":1,"column":198}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":11,"column":17},"generated":{"line":1,"column":200}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"isSupported","original":{"line":11,"column":18},"generated":{"line":1,"column":211}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"isBrowser","original":{"line":16,"column":7},"generated":{"line":1,"column":230}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":1,"column":232}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":16,"column":21},"generated":{"line":1,"column":243}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":16,"column":21},"generated":{"line":1,"column":249}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":16,"column":21},"generated":{"line":1,"column":252}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"_nodeWorkers","original":{"line":16,"column":30},"generated":{"line":1,"column":254}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"writer","original":{"line":20,"column":9},"generated":{"line":1,"column":270}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"worker","original":{"line":20,"column":16},"generated":{"line":1,"column":272}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":20,"column":26},"generated":{"line":1,"column":281}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":20,"column":26},"generated":{"line":1,"column":287}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":null,"original":{"line":20,"column":33},"generated":{"line":1,"column":294}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"options","original":{"line":20,"column":26},"generated":{"line":1,"column":296}},{"source":"../../../../src/lib/worker-loader-utils/encode-with-worker.ts","name":"worker","original":{"line":20,"column":35},"generated":{"line":1,"column":298}}],"sources":{"../../../../src/lib/worker-loader-utils/encode-with-worker.ts":"import {WorkerFarm} from '@loaders.gl/worker-utils';\nimport {Writer, WriterOptions} from '../../types';\nimport {isBrowser} from '../env-utils/globals';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canEncodeWithWorker(writer: Writer, options?: WriterOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  // Node workers are still experimental\n  if (!isBrowser && !options?._nodeWorkers) {\n    return false;\n  }\n\n  return writer.worker && options?.worker;\n}\n"},"lineCount":null}},"error":null,"hash":"425024d539495ad170574aa515d58b98","cacheData":{"env":{}}}