{"id":"jZuR","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/dist/esm/modules/image-fun-filters/dotscreen.js.map","includedInParent":true,"mtime":1688284132458},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/package.json","includedInParent":true,"mtime":1688284132458}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.dotScreen=void 0;const e=\"uniform vec2 center;\\nuniform float angle;\\nuniform float size;\\n\\nfloat pattern(vec2 texSize, vec2 texCoord) {\\n  float scale = 3.1415 / size;\\n\\n  float s = sin(angle), c = cos(angle);\\n  vec2 tex = texCoord * texSize - center * texSize;\\n  vec2 point = vec2(\\n    c * tex.x - s * tex.y,\\n    s * tex.x + c * tex.y\\n  ) * scale;\\n  return (sin(point.x) * sin(point.y)) * 4.0;\\n}\\n\\nvec4 dotScreen_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\\n  float average = (color.r + color.g + color.b) / 3.0;\\n  return vec4(vec3(average * 10.0 - 5.0 + pattern(texSize, texCoord)), color.a);\\n}\\n\",n={center:[.5,.5],angle:{value:1.1,softMin:0,softMax:Math.PI/2},size:{value:3,min:1,softMin:3,softMax:20}},t={name:\"dotScreen\",uniforms:n,fs:e,passes:[{filter:!0}]};exports.dotScreen=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":91}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"fs","original":{"line":3,"column":6},"generated":{"line":1,"column":99}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":3,"column":8},"generated":{"line":1,"column":101}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"uniforms","original":{"line":26,"column":6},"generated":{"line":1,"column":700}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":26,"column":17},"generated":{"line":1,"column":702}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"center","original":{"line":27,"column":2},"generated":{"line":1,"column":703}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":27,"column":10},"generated":{"line":1,"column":710}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":27,"column":11},"generated":{"line":1,"column":711}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":27,"column":16},"generated":{"line":1,"column":714}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"angle","original":{"line":28,"column":2},"generated":{"line":1,"column":718}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":28,"column":9},"generated":{"line":1,"column":724}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"value","original":{"line":28,"column":10},"generated":{"line":1,"column":725}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":28,"column":17},"generated":{"line":1,"column":731}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"softMin","original":{"line":28,"column":22},"generated":{"line":1,"column":735}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":28,"column":31},"generated":{"line":1,"column":743}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"softMax","original":{"line":28,"column":34},"generated":{"line":1,"column":745}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"Math","original":{"line":28,"column":43},"generated":{"line":1,"column":753}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"PI","original":{"line":28,"column":48},"generated":{"line":1,"column":758}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":28,"column":53},"generated":{"line":1,"column":761}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"size","original":{"line":29,"column":2},"generated":{"line":1,"column":764}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":769}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"value","original":{"line":29,"column":9},"generated":{"line":1,"column":770}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":29,"column":16},"generated":{"line":1,"column":776}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"min","original":{"line":29,"column":19},"generated":{"line":1,"column":778}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":29,"column":24},"generated":{"line":1,"column":782}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"softMin","original":{"line":29,"column":27},"generated":{"line":1,"column":784}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":29,"column":36},"generated":{"line":1,"column":792}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"softMax","original":{"line":29,"column":39},"generated":{"line":1,"column":794}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":29,"column":48},"generated":{"line":1,"column":802}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"dotScreen","original":{"line":33,"column":13},"generated":{"line":1,"column":807}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":25},"generated":{"line":1,"column":809}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"name","original":{"line":34,"column":2},"generated":{"line":1,"column":810}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":815}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"uniforms","original":{"line":35,"column":2},"generated":{"line":1,"column":827}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"uniforms","original":{"line":35,"column":2},"generated":{"line":1,"column":836}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"fs","original":{"line":36,"column":2},"generated":{"line":1,"column":838}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"fs","original":{"line":36,"column":2},"generated":{"line":1,"column":841}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"passes","original":{"line":37,"column":2},"generated":{"line":1,"column":843}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":850}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":37,"column":11},"generated":{"line":1,"column":851}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":"filter","original":{"line":37,"column":12},"generated":{"line":1,"column":852}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":37,"column":20},"generated":{"line":1,"column":860}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":865}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":873}},{"source":"../../../../src/modules/image-fun-filters/dotscreen.js","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":883}}],"sources":{"../../../../src/modules/image-fun-filters/dotscreen.js":"/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nconst fs = `\\\nuniform vec2 center;\nuniform float angle;\nuniform float size;\n\nfloat pattern(vec2 texSize, vec2 texCoord) {\n  float scale = 3.1415 / size;\n\n  float s = sin(angle), c = cos(angle);\n  vec2 tex = texCoord * texSize - center * texSize;\n  vec2 point = vec2(\n    c * tex.x - s * tex.y,\n    s * tex.x + c * tex.y\n  ) * scale;\n  return (sin(point.x) * sin(point.y)) * 4.0;\n}\n\nvec4 dotScreen_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  float average = (color.r + color.g + color.b) / 3.0;\n  return vec4(vec3(average * 10.0 - 5.0 + pattern(texSize, texCoord)), color.a);\n}\n`;\n\nconst uniforms = {\n  center: [0.5, 0.5],\n  angle: {value: 1.1, softMin: 0, softMax: Math.PI / 2},\n  size: {value: 3, min: 1, softMin: 3, softMax: 20}\n};\n\n/** @type {ShaderPass} */\nexport const dotScreen = {\n  name: 'dotScreen',\n  uniforms,\n  fs,\n  passes: [{filter: true}]\n};\n"},"lineCount":null}},"error":null,"hash":"ef3531ccb9004fe0ad86ae3852dfa687","cacheData":{"env":{}}}