{"id":"MbYB","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/dist/esm/lib/option-utils/merge-loader-options.js.map","includedInParent":true,"mtime":1688284132110},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@loaders.gl/loader-utils/package.json","includedInParent":true,"mtime":1688284132110}],"generated":{"js":"\"use strict\";function e(e,t){const o={...e};for(const[r,s]of Object.entries(t))s&&\"object\"==typeof s?(o[r]=o[r]||{},Object.assign(o[r],t[r])):o[r]=t[r];return o}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.mergeLoaderOptions=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"mergeLoaderOptions","original":{"line":11,"column":16},"generated":{"line":1,"column":22}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"baseOptions","original":{"line":12,"column":2},"generated":{"line":1,"column":24}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newOptions","original":{"line":13,"column":2},"generated":{"line":1,"column":26}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":1,"column":29}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"options","original":{"line":15,"column":8},"generated":{"line":1,"column":35}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":15,"column":18},"generated":{"line":1,"column":37}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"baseOptions","original":{"line":15,"column":22},"generated":{"line":1,"column":41}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":44}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":16,"column":7},"generated":{"line":1,"column":48}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":16,"column":14},"generated":{"line":1,"column":54}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newValue","original":{"line":16,"column":19},"generated":{"line":1,"column":56}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"Object","original":{"line":16,"column":32},"generated":{"line":1,"column":61}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"entries","original":{"line":16,"column":39},"generated":{"line":1,"column":68}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newOptions","original":{"line":16,"column":47},"generated":{"line":1,"column":76}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newValue","original":{"line":17,"column":8},"generated":{"line":1,"column":79}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":1,"column":82}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newValue","original":{"line":17,"column":27},"generated":{"line":1,"column":99}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"options","original":{"line":18,"column":6},"generated":{"line":1,"column":102}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":18,"column":14},"generated":{"line":1,"column":104}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"options","original":{"line":18,"column":21},"generated":{"line":1,"column":107}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":18,"column":29},"generated":{"line":1,"column":109}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":18,"column":37},"generated":{"line":1,"column":113}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"Object","original":{"line":19,"column":6},"generated":{"line":1,"column":116}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"assign","original":{"line":19,"column":13},"generated":{"line":1,"column":123}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"options","original":{"line":19,"column":20},"generated":{"line":1,"column":130}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":19,"column":28},"generated":{"line":1,"column":132}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newOptions","original":{"line":19,"column":44},"generated":{"line":1,"column":135}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":19,"column":55},"generated":{"line":1,"column":137}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"options","original":{"line":21,"column":6},"generated":{"line":1,"column":142}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":21,"column":14},"generated":{"line":1,"column":144}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"newOptions","original":{"line":21,"column":21},"generated":{"line":1,"column":147}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"key","original":{"line":21,"column":32},"generated":{"line":1,"column":149}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":152}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":"options","original":{"line":24,"column":9},"generated":{"line":1,"column":159}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":161}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":168}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":183}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":191}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":204}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":205}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":212}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":216}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":224}},{"source":"../../../../src/lib/option-utils/merge-loader-options.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":243}}],"sources":{"../../../../src/lib/option-utils/merge-loader-options.ts":"// loaders.gl, MIT license\n\nimport {LoaderOptions} from '../../types';\n\n/**\n *\n * @param baseOptions Can be undefined, in which case a fresh options object will be minted\n * @param newOptions\n * @returns\n */\nexport function mergeLoaderOptions<Options extends LoaderOptions>(\n  baseOptions: Options | undefined,\n  newOptions: Options\n): Options {\n  const options = {...baseOptions};\n  for (const [key, newValue] of Object.entries(newOptions)) {\n    if (newValue && typeof newValue === 'object') {\n      options[key] = options[key] || {};\n      Object.assign(options[key] as object, newOptions[key]);\n    } else {\n      options[key] = newOptions[key];\n    }\n  }\n  return options as Options;\n}\n"},"lineCount":null}},"error":null,"hash":"7fceba711d025afd4c1d59b11715e839","cacheData":{"env":{}}}