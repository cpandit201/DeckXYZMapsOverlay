{"id":"z868","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/dist/esm/modules/image-fun-filters/ink.js.map","includedInParent":true,"mtime":1688284132458},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@luma.gl/shadertools/package.json","includedInParent":true,"mtime":1688284132458}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ink=void 0;const e=\"uniform float strength;\\n\\nvec4 ink_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\\n  vec2 dx = vec2(1.0 / texSize.x, 0.0);\\n  vec2 dy = vec2(0.0, 1.0 / texSize.y);\\n  vec4 color = texture2D(texture, texCoord);\\n  float bigTotal = 0.0;\\n  float smallTotal = 0.0;\\n  vec3 bigAverage = vec3(0.0);\\n  vec3 smallAverage = vec3(0.0);\\n  for (float x = -2.0; x <= 2.0; x += 1.0) {\\n    for (float y = -2.0; y <= 2.0; y += 1.0) {\\n      vec3 sample = texture2D(texture, texCoord + dx * x + dy * y).rgb;\\n      bigAverage += sample;\\n      bigTotal += 1.0;\\n      if (abs(x) + abs(y) < 2.0) {\\n        smallAverage += sample;\\n        smallTotal += 1.0;\\n      }\\n    }\\n  }\\n  vec3 edge = max(vec3(0.0), bigAverage / bigTotal - smallAverage / smallTotal);\\n  float power = strength * strength * strength * strength * strength;\\n  return vec4(color.rgb - dot(edge, edge) * power * 100000.0, color.a);\\n}\\n\",t={strength:{value:.25,min:0,softMax:1}},n={name:\"ink\",uniforms:t,fs:e,passes:[{sampler:!0}]};exports.ink=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":85}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"fs","original":{"line":3,"column":6},"generated":{"line":1,"column":93}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":3,"column":8},"generated":{"line":1,"column":95}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"uniforms","original":{"line":31,"column":6},"generated":{"line":1,"column":1010}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":1012}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"strength","original":{"line":32,"column":2},"generated":{"line":1,"column":1013}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":32,"column":12},"generated":{"line":1,"column":1022}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"value","original":{"line":32,"column":13},"generated":{"line":1,"column":1023}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":32,"column":20},"generated":{"line":1,"column":1029}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"min","original":{"line":32,"column":26},"generated":{"line":1,"column":1033}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":32,"column":31},"generated":{"line":1,"column":1037}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"softMax","original":{"line":32,"column":34},"generated":{"line":1,"column":1039}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":32,"column":43},"generated":{"line":1,"column":1047}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"ink","original":{"line":36,"column":13},"generated":{"line":1,"column":1051}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":19},"generated":{"line":1,"column":1053}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"name","original":{"line":37,"column":2},"generated":{"line":1,"column":1054}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":37,"column":8},"generated":{"line":1,"column":1059}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"uniforms","original":{"line":38,"column":2},"generated":{"line":1,"column":1065}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"uniforms","original":{"line":38,"column":2},"generated":{"line":1,"column":1074}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"fs","original":{"line":39,"column":2},"generated":{"line":1,"column":1076}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"fs","original":{"line":39,"column":2},"generated":{"line":1,"column":1079}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"passes","original":{"line":40,"column":2},"generated":{"line":1,"column":1081}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":40,"column":10},"generated":{"line":1,"column":1088}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":40,"column":11},"generated":{"line":1,"column":1089}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":"sampler","original":{"line":40,"column":12},"generated":{"line":1,"column":1090}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":40,"column":21},"generated":{"line":1,"column":1099}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":1104}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":1112}},{"source":"../../../../src/modules/image-fun-filters/ink.js","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":1116}}],"sources":{"../../../../src/modules/image-fun-filters/ink.js":"/** @typedef {import('../../types').ShaderPass} ShaderPass */\n\nconst fs = `\\\nuniform float strength;\n\nvec4 ink_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 dx = vec2(1.0 / texSize.x, 0.0);\n  vec2 dy = vec2(0.0, 1.0 / texSize.y);\n  vec4 color = texture2D(texture, texCoord);\n  float bigTotal = 0.0;\n  float smallTotal = 0.0;\n  vec3 bigAverage = vec3(0.0);\n  vec3 smallAverage = vec3(0.0);\n  for (float x = -2.0; x <= 2.0; x += 1.0) {\n    for (float y = -2.0; y <= 2.0; y += 1.0) {\n      vec3 sample = texture2D(texture, texCoord + dx * x + dy * y).rgb;\n      bigAverage += sample;\n      bigTotal += 1.0;\n      if (abs(x) + abs(y) < 2.0) {\n        smallAverage += sample;\n        smallTotal += 1.0;\n      }\n    }\n  }\n  vec3 edge = max(vec3(0.0), bigAverage / bigTotal - smallAverage / smallTotal);\n  float power = strength * strength * strength * strength * strength;\n  return vec4(color.rgb - dot(edge, edge) * power * 100000.0, color.a);\n}\n`;\n\nconst uniforms = {\n  strength: {value: 0.25, min: 0, softMax: 1}\n};\n\n/** @type {ShaderPass} */\nexport const ink = {\n  name: 'ink',\n  uniforms,\n  fs,\n  passes: [{sampler: true}]\n};\n"},"lineCount":null}},"error":null,"hash":"ec4a79522f31e442db5d0d6795824e84","cacheData":{"env":{}}}