{"id":"TfDO","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/controllers/view-state.js.map","includedInParent":true,"mtime":1688284130514},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/package.json","includedInParent":true,"mtime":1688284130514},{"name":"@babel/runtime/helpers/esm/defineProperty","loc":{"line":1,"column":28,"index":28},"parent":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/controllers/view-state.js","resolved":"/project/deck-gl-examples-01/node_modules/@babel/runtime/helpers/esm/defineProperty.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var t=e(require(\"@babel/runtime/helpers/esm/defineProperty\"));function e(t){return t&&t.__esModule?t:{default:t}}class r{constructor(e,r){(0,t.default)(this,\"_viewportProps\",void 0),(0,t.default)(this,\"_state\",void 0),this._viewportProps=this.applyConstraints(e),this._state=r}getViewportProps(){return this._viewportProps}getState(){return this._state}}exports.default=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":0}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":13}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":20}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":35}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":43}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":56}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":57}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":64}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":68}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":76}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":89}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":91}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":95}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":97}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":99}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":107}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":153}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":162}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":164}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":167}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":174}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":177}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":179}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":190}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":192}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":193}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":201}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":1,"column":204}},{"source":"../../../src/controllers/view-state.ts","name":"ViewState","original":{"line":3,"column":30},"generated":{"line":1,"column":210}},{"source":"../../../src/controllers/view-state.ts","name":"constructor","original":{"line":7,"column":2},"generated":{"line":1,"column":212}},{"source":"../../../src/controllers/view-state.ts","name":"props","original":{"line":7,"column":14},"generated":{"line":1,"column":224}},{"source":"../../../src/controllers/view-state.ts","name":"state","original":{"line":7,"column":38},"generated":{"line":1,"column":226}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":230}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":232}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":234}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":243}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":248}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":270}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":274}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":276}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":278}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":287}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":292}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":1,"column":306}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":1,"column":309}},{"source":"../../../src/controllers/view-state.ts","name":"_viewportProps","original":{"line":8,"column":9},"generated":{"line":1,"column":314}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":8,"column":26},"generated":{"line":1,"column":329}},{"source":"../../../src/controllers/view-state.ts","name":"applyConstraints","original":{"line":8,"column":31},"generated":{"line":1,"column":334}},{"source":"../../../src/controllers/view-state.ts","name":"props","original":{"line":8,"column":48},"generated":{"line":1,"column":351}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":1,"column":354}},{"source":"../../../src/controllers/view-state.ts","name":"_state","original":{"line":9,"column":9},"generated":{"line":1,"column":359}},{"source":"../../../src/controllers/view-state.ts","name":"state","original":{"line":9,"column":18},"generated":{"line":1,"column":366}},{"source":"../../../src/controllers/view-state.ts","name":"getViewportProps","original":{"line":12,"column":2},"generated":{"line":1,"column":368}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":1,"column":387}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":1,"column":394}},{"source":"../../../src/controllers/view-state.ts","name":"_viewportProps","original":{"line":13,"column":16},"generated":{"line":1,"column":399}},{"source":"../../../src/controllers/view-state.ts","name":"getState","original":{"line":16,"column":2},"generated":{"line":1,"column":414}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":1,"column":425}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":432}},{"source":"../../../src/controllers/view-state.ts","name":"_state","original":{"line":17,"column":16},"generated":{"line":1,"column":437}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":445}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":453}},{"source":"../../../src/controllers/view-state.ts","name":null,"original":{"line":3,"column":82},"generated":{"line":1,"column":461}}],"sources":{"../../../src/controllers/view-state.ts":"import type Viewport from '../viewports/viewport';\n\nexport default abstract class ViewState<T, Props, State> implements IViewState<T> {\n  private _viewportProps: Required<Props>;\n  private _state: State;\n\n  constructor(props: Required<Props>, state: State) {\n    this._viewportProps = this.applyConstraints(props);\n    this._state = state;\n  }\n\n  getViewportProps(): Required<Props> {\n    return this._viewportProps;\n  }\n\n  getState(): State {\n    return this._state;\n  }\n\n  abstract applyConstraints(props: Required<Props>): Required<Props>;\n\n  abstract shortestPathFrom(viewState: T): Props;\n\n  abstract panStart(params: {pos: [number, number]}): T;\n  abstract pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): T;\n  abstract panEnd(): T;\n\n  abstract rotateStart(params: {pos: [number, number]}): T;\n  abstract rotate(params: {pos?: [number, number]; deltaAngleX?: number; deltaAngleY: number}): T;\n  abstract rotateEnd(): T;\n\n  abstract zoomStart({pos}: {pos: [number, number]}): T;\n  abstract zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): T;\n  abstract zoomEnd(): T;\n\n  abstract zoomIn(speed?: number): T;\n  abstract zoomOut(speed?: number): T;\n\n  abstract moveLeft(speed?: number): T;\n  abstract moveRight(speed?: number): T;\n  abstract moveUp(speed?: number): T;\n  abstract moveDown(speed?: number): T;\n\n  abstract rotateLeft(speed?: number): T;\n  abstract rotateRight(speed?: number): T;\n  abstract rotateUp(speed?: number): T;\n  abstract rotateDown(speed?: number): T;\n}\n\nexport interface IViewState<T> {\n  makeViewport?: (props: Record<string, any>) => Viewport;\n\n  getViewportProps(): Record<string, any>;\n\n  getState(): Record<string, any>;\n\n  shortestPathFrom(viewState: T): Record<string, any>;\n\n  panStart(params: {pos: [number, number]}): T;\n  pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): T;\n  panEnd(): T;\n\n  rotateStart(params: {pos: [number, number]}): T;\n  rotate(params: {pos?: [number, number]; deltaAngleX?: number; deltaAngleY?: number}): T;\n  rotateEnd(): T;\n\n  zoomStart({pos}: {pos: [number, number]}): T;\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): T;\n  zoomEnd(): T;\n\n  zoomIn(speed?: number): T;\n  zoomOut(speed?: number): T;\n\n  moveLeft(speed?: number): T;\n  moveRight(speed?: number): T;\n  moveUp(speed?: number): T;\n  moveDown(speed?: number): T;\n\n  rotateLeft(speed?: number): T;\n  rotateRight(speed?: number): T;\n  rotateUp(speed?: number): T;\n  rotateDown(speed?: number): T;\n}\n"},"lineCount":null}},"error":null,"hash":"1c84084306e0a33b67728c04bdce5166","cacheData":{"env":{}}}