{"id":"node_modules/@math.gl/core/dist/esm/lib/assert.js","dependencies":[{"name":"/project/home/cpandit201/workspace/node_modules/@math.gl/core/dist/esm/lib/assert.js.map","includedInParent":true,"mtime":1688284130683},{"name":"/project/home/cpandit201/workspace/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/home/cpandit201/workspace/node_modules/@math.gl/core/package.json","includedInParent":true,"mtime":1688284130683}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assert;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"math.gl assertion \".concat(message));\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":1,"column":15},"generated":{"line":7,"column":0}},{"source":"../../../src/lib/assert.ts","name":"assert","original":{"line":1,"column":24},"generated":{"line":7,"column":9}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":1,"column":15},"generated":{"line":7,"column":15}},{"source":"../../../src/lib/assert.ts","name":"condition","original":{"line":1,"column":31},"generated":{"line":7,"column":16}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":1,"column":15},"generated":{"line":7,"column":25}},{"source":"../../../src/lib/assert.ts","name":"message","original":{"line":1,"column":51},"generated":{"line":7,"column":27}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":1,"column":15},"generated":{"line":7,"column":34}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":1,"column":75},"generated":{"line":7,"column":36}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":2,"column":2},"generated":{"line":8,"column":2}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":2,"column":6},"generated":{"line":8,"column":6}},{"source":"../../../src/lib/assert.ts","name":"condition","original":{"line":2,"column":7},"generated":{"line":8,"column":7}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":2,"column":2},"generated":{"line":8,"column":16}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":2,"column":18},"generated":{"line":8,"column":18}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":9,"column":4}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":10}},{"source":"../../../src/lib/assert.ts","name":"Error","original":{"line":3,"column":14},"generated":{"line":9,"column":14}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":19}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":20}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":40}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":41}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":47}},{"source":"../../../src/lib/assert.ts","name":"message","original":{"line":3,"column":41},"generated":{"line":9,"column":48}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":55}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":9,"column":56}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":9,"column":57}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":4,"column":3},"generated":{"line":10,"column":2}},{"source":"../../../src/lib/assert.ts","name":null,"original":{"line":5,"column":1},"generated":{"line":11,"column":0}}],"sources":{"../../../src/lib/assert.ts":"export default function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(`math.gl assertion ${message}`);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"6a51f701ba114f51d2e54d7a9279cc5a","cacheData":{"env":{}}}