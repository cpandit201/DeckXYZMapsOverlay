{"id":"MOmt","dependencies":[{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/dist/esm/utils/positions.js.map","includedInParent":true,"mtime":1688284130514},{"name":"/project/deck-gl-examples-01/package.json","includedInParent":true,"mtime":1688495957541},{"name":"/project/deck-gl-examples-01/node_modules/@deck.gl/core/package.json","includedInParent":true,"mtime":1688284130514}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getPosition=o,exports.parsePosition=e;const t=/([0-9]+\\.?[0-9]*)(%|px)/;function e(e){switch(typeof e){case\"number\":return{position:e,relative:!1};case\"string\":const o=t.exec(e);if(o&&o.length>=3){const t=\"%\"===o[2],e=parseFloat(o[1]);return{position:t?e/100:e,relative:t}}default:throw new Error(\"Could not parse position string \".concat(e))}}function o(t,e){return t.relative?Math.round(t.position*e):t.position}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":88}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":90}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":98}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":1,"column":112}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../src/utils/positions.ts","name":"PERCENT_OR_PIXELS_REGEX","original":{"line":1,"column":6},"generated":{"line":1,"column":120}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":1,"column":32},"generated":{"line":1,"column":122}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":1,"column":148}},{"source":"../../../src/utils/positions.ts","name":"parsePosition","original":{"line":9,"column":16},"generated":{"line":1,"column":157}},{"source":"../../../src/utils/positions.ts","name":"value","original":{"line":9,"column":30},"generated":{"line":1,"column":159}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":1,"column":162}},{"source":"../../../src/utils/positions.ts","name":"value","original":{"line":10,"column":17},"generated":{"line":1,"column":176}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":1,"column":179}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":1,"column":183}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":1,"column":192}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":1,"column":198}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":13,"column":8},"generated":{"line":1,"column":199}},{"source":"../../../src/utils/positions.ts","name":"value","original":{"line":13,"column":18},"generated":{"line":1,"column":208}},{"source":"../../../src/utils/positions.ts","name":"relative","original":{"line":14,"column":8},"generated":{"line":1,"column":210}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":1,"column":220}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":1,"column":223}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":17,"column":9},"generated":{"line":1,"column":227}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":1,"column":236}},{"source":"../../../src/utils/positions.ts","name":"match","original":{"line":18,"column":12},"generated":{"line":1,"column":242}},{"source":"../../../src/utils/positions.ts","name":"PERCENT_OR_PIXELS_REGEX","original":{"line":18,"column":20},"generated":{"line":1,"column":244}},{"source":"../../../src/utils/positions.ts","name":"exec","original":{"line":18,"column":44},"generated":{"line":1,"column":246}},{"source":"../../../src/utils/positions.ts","name":"value","original":{"line":18,"column":49},"generated":{"line":1,"column":251}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":1,"column":254}},{"source":"../../../src/utils/positions.ts","name":"match","original":{"line":19,"column":10},"generated":{"line":1,"column":257}},{"source":"../../../src/utils/positions.ts","name":"match","original":{"line":19,"column":19},"generated":{"line":1,"column":260}},{"source":"../../../src/utils/positions.ts","name":"length","original":{"line":19,"column":25},"generated":{"line":1,"column":262}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":19,"column":35},"generated":{"line":1,"column":270}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":19,"column":38},"generated":{"line":1,"column":272}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":1,"column":273}},{"source":"../../../src/utils/positions.ts","name":"relative","original":{"line":20,"column":14},"generated":{"line":1,"column":279}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":1,"column":281}},{"source":"../../../src/utils/positions.ts","name":"match","original":{"line":20,"column":25},"generated":{"line":1,"column":287}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":20,"column":31},"generated":{"line":1,"column":289}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":21,"column":14},"generated":{"line":1,"column":292}},{"source":"../../../src/utils/positions.ts","name":"parseFloat","original":{"line":21,"column":25},"generated":{"line":1,"column":294}},{"source":"../../../src/utils/positions.ts","name":"match","original":{"line":21,"column":36},"generated":{"line":1,"column":305}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":21,"column":42},"generated":{"line":1,"column":307}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":1,"column":311}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":1,"column":317}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":23,"column":10},"generated":{"line":1,"column":318}},{"source":"../../../src/utils/positions.ts","name":"relative","original":{"line":23,"column":20},"generated":{"line":1,"column":327}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":23,"column":31},"generated":{"line":1,"column":329}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":23,"column":42},"generated":{"line":1,"column":331}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":23,"column":48},"generated":{"line":1,"column":335}},{"source":"../../../src/utils/positions.ts","name":"relative","original":{"line":24,"column":10},"generated":{"line":1,"column":337}},{"source":"../../../src/utils/positions.ts","name":"relative","original":{"line":24,"column":10},"generated":{"line":1,"column":346}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":1,"column":349}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":357}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":1,"column":363}},{"source":"../../../src/utils/positions.ts","name":"Error","original":{"line":31,"column":16},"generated":{"line":1,"column":367}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":1,"column":373}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":1,"column":408}},{"source":"../../../src/utils/positions.ts","name":"value","original":{"line":31,"column":57},"generated":{"line":1,"column":415}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":420}},{"source":"../../../src/utils/positions.ts","name":"getPosition","original":{"line":35,"column":16},"generated":{"line":1,"column":429}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":35,"column":28},"generated":{"line":1,"column":431}},{"source":"../../../src/utils/positions.ts","name":"extent","original":{"line":35,"column":48},"generated":{"line":1,"column":433}},{"source":"../../../src/utils/positions.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":436}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":36,"column":9},"generated":{"line":1,"column":443}},{"source":"../../../src/utils/positions.ts","name":"relative","original":{"line":36,"column":18},"generated":{"line":1,"column":445}},{"source":"../../../src/utils/positions.ts","name":"Math","original":{"line":36,"column":29},"generated":{"line":1,"column":454}},{"source":"../../../src/utils/positions.ts","name":"round","original":{"line":36,"column":34},"generated":{"line":1,"column":459}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":36,"column":40},"generated":{"line":1,"column":465}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":36,"column":49},"generated":{"line":1,"column":467}},{"source":"../../../src/utils/positions.ts","name":"extent","original":{"line":36,"column":60},"generated":{"line":1,"column":476}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":36,"column":70},"generated":{"line":1,"column":479}},{"source":"../../../src/utils/positions.ts","name":"position","original":{"line":36,"column":79},"generated":{"line":1,"column":481}}],"sources":{"../../../src/utils/positions.ts":"const PERCENT_OR_PIXELS_REGEX = /([0-9]+\\.?[0-9]*)(%|px)/;\n\nexport type Position = {\n  position: number;\n  relative: boolean;\n};\n\n// Takes a number or a string of formats `50%`, `33.3%` or `200px`\nexport function parsePosition(value: number | string): Position {\n  switch (typeof value) {\n    case 'number':\n      return {\n        position: value,\n        relative: false\n      };\n\n    case 'string':\n      const match = PERCENT_OR_PIXELS_REGEX.exec(value);\n      if (match && match.length >= 3) {\n        const relative = match[2] === '%';\n        const position = parseFloat(match[1]);\n        return {\n          position: relative ? position / 100 : position,\n          relative\n        };\n      }\n    // fallthrough\n\n    default:\n      // eslint-disable-line\n      throw new Error(`Could not parse position string ${value}`);\n  }\n}\n\nexport function getPosition(position: Position, extent: number): number {\n  return position.relative ? Math.round(position.position * extent) : position.position;\n}\n"},"lineCount":null}},"error":null,"hash":"e314879e1df41bc47723cbe1fa9bc404","cacheData":{"env":{}}}